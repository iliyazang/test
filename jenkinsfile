pipeline {
    agent any
parameters {
  credentials credentialType: 'com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl', defaultValue: '608b0a05-f4f2-46db-b684-0f1f93741258', name: 'AWS', required: false
}


    environment {
        PATH = "${PATH}:${getTerraformPath()}"
    }
    stages{

        //  stage('Initial Deployment Approval') {
        //       steps {
        //         script {
        //         def userInput = input(id: 'confirm', message: 'Start Pipeline?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Start Pipeline', name: 'confirm'] ])
        //      }
        //    }
        // }

         stage('terraform init'){
             steps {
                //slackSend (color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                 //sh "returnStatus: true, script: 'terraform workspace new dev'"
                 sh "terraform init -reconfigure"
                 
         }
         }
         stage('terraform plan'){
             steps {
                 //sh "returnStatus: true, script: 'terraform workspace new dev'"
                 // sh "terraform destroy -auto-approve"
                   sh "terraform plan"
                   // sh "terraform plan -out=tfplan -input=false"
                 
                
                  
                 
             }
         }
        stage('Test Deployment Approval') {
              steps {
                script {
                def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
             }
           }
        }
        //  stage('Deploy into Dev'){
        //      steps {
        //          //sh "returnStatus: true, script: 'terraform workspace new dev'"
        //          sh "terraform apply -auto-approve"
        //         // "terraform destroy -input=false -auto-approve"
                 
        //      }
        //  }


        //   stage('UAT Deployment Approval') {
        //       steps {
        //         script {
        //         def userInput = input(id: 'confirm', message: 'Deploy into UAT?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Deploy Into UAT', name: 'confirm'] ])
        //      }
        //    }
        // }

        stage('Deploy into UAT'){
             steps {
                 //sh "returnStatus: true, script: 'terraform workspace new dev'"
                 //sh "terraform apply -auto-approve"
                //  sh "terraform destroy -input=false -auto-approve"
                 sh "terraform apply  -input=false tfplan"
             }
         }
          
}
        post {
      //Trigger on Success
      success {
         slackSend (color: '#3EB991', message: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      }

      //Trigger on Failure
      failure {
         slackSend (color: '#E01563', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
      }
        
    }
}
 def getTerraformPath(){
        def tfHome= tool name: 'terraform-14', type: 'terraform'
        return tfHome
    }

//  def getAnsiblePath(){
//         def AnsibleHome= tool name: 'Ansible', type: 'org.jenkinsci.plugins.ansible.AnsibleInstallation'
//         return AnsibleHome
//     }